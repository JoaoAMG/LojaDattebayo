networks:
  dattebayo-network:
    driver: bridge

volumes:
  postgres_data:

services:
  # ============================================
  # 1. Database Service (PostgreSQL)
  # ============================================
  postgresql:
    image: postgres:16
    container_name: postgresql_db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dattebayo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dattebayo-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d dattebayo" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # ============================================
  # 2. Messaging Service (Kafka Cluster)
  # ============================================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - dattebayo-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - dattebayo-network

  # ============================================
  # 3. Kafka UI
  # ============================================
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Dattebayo Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    networks:
      - dattebayo-network

  # ============================================
  # 4. Spring Boot Application
  # ============================================
  app:
    build: .
    container_name: dattebayo_app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql_db:5432/dattebayo
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      # senha antiga
      #JWT_SECRET: SUA_CHAVE_SECRETA_MUITO_LONGA_E_COMPLEXA_AQUI_PARA_ASSINATURA
      JWT_SECRET: dW1hLWZyYXNlLXNlY3JldGEtbXVpdG8tZm9ydGUtZS1sb25nYS1wYXJhLW8tbWV1LXByb2pldG8tZGF0dGViYXlvLTIwMjU=
    # ✅ CORREÇÃO: 'command' está agora no nível correto, fora do 'environment'.
    command: sh -c "printenv && java -jar /app.jar"

    networks:
      - dattebayo-network
    depends_on:
      postgresql:
        condition: service_healthy
      kafka:
        condition: service_started
